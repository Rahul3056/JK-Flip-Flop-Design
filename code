#### **Example Verilog Code (JK Flip-Flop)**  
```verilog
module jk_flip_flop (
    input wire J, K, CLK,
    output reg Q
);
    always @(posedge CLK) begin
        case ({J, K})
            2'b00: Q <= Q;    // Hold state
            2'b01: Q <= 0;    // Reset
            2'b10: Q <= 1;    // Set
            2'b11: Q <= ~Q;   // Toggle
        endcase
    end
endmodule
```

#### **Testbench Code**  
```verilog
module testbench;
    reg J, K, CLK;
    wire Q;

    jk_flip_flop uut (.J(J), .K(K), .CLK(CLK), .Q(Q));

    initial begin
        CLK = 0;
        forever #5 CLK = ~CLK; // Generate clock with 10-time unit period
    end

    initial begin
        $monitor("Time=%0t | CLK=%b | J=%b | K=%b | Q=%b", $time, CLK, J, K, Q);

        J = 0; K = 0; #10;
        J = 0; K = 1; #10;
        J = 1; K = 0; #10;
        J = 1; K = 1; #10;
        J = 1; K = 1; #10;

        $finish;
    end
endmodule
```

#### **Simulation Output (Console Log Example)**  
```
Time=0 | CLK=0 | J=0 | K=0 | Q=0  
Time=5 | CLK=1 | J=0 | K=0 | Q=0  
Time=10 | CLK=0 | J=0 | K=1 | Q=0  
Time=15 | CLK=1 | J=0 | K=1 | Q=0  
Time=20 | CLK=0 | J=1 | K=0 | Q=0  
Time=25 | CLK=1 | J=1 | K=0 | Q=1  
Time=30 | CLK=0 | J=1 | K=1 | Q=1  
Time=35 | CLK=1 | J=1 | K=1 | Q=0  
Time=40 | CLK=0 | J=1 | K=1 | Q=0  
Time=45 | CLK=1 | J=1 | K=1 | Q=1  
``` 
